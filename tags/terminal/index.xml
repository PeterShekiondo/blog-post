<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>terminal on protiumx blog</title><link>https://protiumx.dev/blog/tags/terminal/</link><description>Recent content in terminal on protiumx blog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>&lt;a href="https://creativecommons.org/licenses/by-nc/4.0/" target="_blank" rel="noopener">CC BY-NC 4.0&lt;/a></copyright><lastBuildDate>Thu, 17 Nov 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://protiumx.dev/blog/tags/terminal/index.xml" rel="self" type="application/rss+xml"/><item><title>An interpreted language you can try in my terminal website</title><link>https://protiumx.dev/blog/posts/an-interpreted-language-you-can-try-in-my-terminal-website/</link><pubDate>Thu, 17 Nov 2022 00:00:00 +0000</pubDate><guid>https://protiumx.dev/blog/posts/an-interpreted-language-you-can-try-in-my-terminal-website/</guid><description>A few weeks ago I started reading Writing An Interpreter In Go and while reading it and implementing the interpreter a question popped up: what if I can run this interpreter in the terminal in my website?
To recap, a few months ago I decided to transform my personal website into a terminal (read more about it here). In today&amp;rsquo;s post I&amp;rsquo;ll give an overview of the whole implementation, but first a preview:</description></item><item><title>Creating a Text-based UI with rust</title><link>https://protiumx.dev/blog/posts/creating-a-text-based-ui-with-rust/</link><pubDate>Thu, 02 Jun 2022 00:00:00 +0000</pubDate><guid>https://protiumx.dev/blog/posts/creating-a-text-based-ui-with-rust/</guid><description>Intro Continuing with my last project rq, I recently started to work on this project card: Implement interactive prompt. Let&amp;rsquo;s have a look how can we implement a text-based UI with rust.
The ANSI Standard Before we dive into the wonderful world of terminal emulators and text-based interfaces, we need to understand what the ANSI escape sequences are:
ANSI escape sequences are a standard for in-band signaling to control cursor location, color, font styling, and other options on video text terminals and terminal emulators.</description></item><item><title>My profile website is now a terminal</title><link>https://protiumx.dev/blog/posts/my-profile-website-is-now-a-terminal/</link><pubDate>Wed, 25 May 2022 11:42:13 +0200</pubDate><guid>https://protiumx.dev/blog/posts/my-profile-website-is-now-a-terminal/</guid><description>When I was younger I used to think that my profile website would be a really cool, fully featured website, with shiny colors and animations; built with the latest cutting edge frontend technology&amp;hellip; Turns out that the older I get the more I prefer a simple terminal. No UI, just text and commands.
The last time I updated my profile website, it looked like this:
It was already pretty minimalistic, right?</description></item><item><title>An HTTP request parser with rust and pest.rs</title><link>https://protiumx.dev/blog/posts/an-http-request-parser-with-rust-and-pest.rs/</link><pubDate>Mon, 23 May 2022 00:00:00 +0000</pubDate><guid>https://protiumx.dev/blog/posts/an-http-request-parser-with-rust-and-pest.rs/</guid><description>Introduction I happened to have learned about parsing expression grammars a few days ago and got really excited about writing my own grammar. As I was missing this VS Code extension when working on neovim, an idea popped up: What if I write an HTTP grammar and an execute request from an interactive prompt?
Preview:
Preparation For our grammar, we need to make sure we understand the HTTP standard defined here.</description></item><item><title>kitty + zsh + powerlevel10k = ✨ aesthetics ✨</title><link>https://protiumx.dev/blog/posts/kitty--zsh--powerlevel10k-aesthetics/</link><pubDate>Mon, 09 May 2022 00:00:00 +0000</pubDate><guid>https://protiumx.dev/blog/posts/kitty--zsh--powerlevel10k-aesthetics/</guid><description>Who doesn&amp;rsquo;t like a good looking terminal and useful layouts and keymaps? This has always been my goal since I started using linux as main OS.
I have used lots of different terminals, plugins and settings over the years but I think now I achieved the glory with my current setup:
Let&amp;rsquo;s have a look to the configuration.
What do I use? Terminal: Kitty Shell: zsh zsh config management: Oh my Zsh!</description></item></channel></rss>